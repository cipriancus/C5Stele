CREATE TABLE LANGUAGES
(
	CODE VARCHAR(5) NOT NULL,
	NAME VARCHAR(10),
	PRIMARY KEY(CODE),
	CONSTRAINT UX_CODE_NAME UNIQUE(CODE,NAME)
);

CREATE TABLE COUNTRIES
(
	ID INT,
	NAME VARCHAR(45) NOT NULL,
	LANGUAGE VARCHAR(45),
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
    LANGUAGE_ID VARCHAR(5),
	PRIMARY KEY(ID),
    CONSTRAINT UX_NAME_LANG UNIQUE (NAME,LANGUAGE_ID),
    CONSTRAINT FK_COUNTRIES__LANGUAGES FOREIGN KEY(LANGUAGE_ID)
    REFERENCES LANGUAGES(CODE)
);

CREATE TABLE PERIODS
(
	ID INT,
	LAST_RECOMMENDATION_DAY DATE,
	LAST_VOTING_DAY DATE,
	ACTIVE BOOLEAN,
    COUNTRIES_ID INT,
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
	PRIMARY KEY(ID),
    CONSTRAINT FK_PERIODS__COUNTRIES FOREIGN KEY (COUNTRIES_ID)
    REFERENCES COUNTRIES(ID)
);

CREATE TABLE AGENCIES
(
	ID INT,
	CITY VARCHAR(45),
    COUNTRIES_ID INT,
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
	PRIMARY KEY(ID),
    CONSTRAINT UX_CITY_COUNTRIES UNIQUE (CITY, COUNTRIES_ID),
    CONSTRAINT FK_AGENCY__COUNTRIES FOREIGN KEY (COUNTRIES_ID)
    REFERENCES COUNTRIES(ID)
);

CREATE TABLE ROLES
(
	ID INT,
	ROLE_TYPE VARCHAR(45),
	DESCRIPTION VARCHAR(255),
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
	PRIMARY KEY(ID),
    CONSTRAINT UX_ROLETYPE UNIQUE (ROLE_TYPE)
);

CREATE TABLE MESSAGES
(
	CODE VARCHAR(5) NOT NULL,
	MESSAGE VARCHAR(1000),
	CODE_LNG_ID VARCHAR(5),
	CONSTRAINT UX_CODE_MESSAGE UNIQUE(CODE,MESSAGE),
	CONSTRAINT FK_MESSAGES__LANGUAGES FOREIGN KEY(CODE_LNG_ID)
	REFERENCES LANGUAGES(CODE)
);

CREATE TABLE DEPARTMENTS
(
	ID INT,
	CODE VARCHAR(45) NOT NULL,
	DESCRIPTION VARCHAR(255),
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
    CODE_MSG_ID VARCHAR(5),
	PRIMARY KEY(ID),
    CONSTRAINT UX_CODE UNIQUE (CODE),
    CONSTRAINT FK_DEPARTMENTS__MESSAGES FOREIGN KEY(CODE_MSG_ID)
    REFERENCES MESSAGES(CODE)
);

CREATE TABLE POSITIONS
(
	ID INT,
    CODE VARCHAR(45) NOT NULL,
    DESCRIPTION VARCHAR(255),
    DEPARTMENTS_ID INT,
    CODE_MESSAGE_ID VARCHAR(5),
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
	PRIMARY KEY(ID),
    CONSTRAINT UX_CODE UNIQUE (CODE),
    CONSTRAINT FK_POSITIONS__DEPARTMENTS FOREIGN KEY (DEPARTMENTS_ID)
    REFERENCES DEPARTMENTS(ID),
    CONSTRAINT FK_POSITIONS__MESSAGES FOREIGN KEY (CODE_MESSAGE_ID)
    REFERENCES MESSAGES(CODE)
);

CREATE TABLE PICTURES
(
    ID INT AUTO_INCREMENT,
	IMAGE BLOB,
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
    PRIMARY KEY(ID)
);

CREATE TABLE USERS
(
	ID INT AUTO_INCREMENT,
	FIRST_NAME VARCHAR(255) NOT NULL,
	LAST_NAME VARCHAR(255) NOT NULL,
	TITLE VARCHAR(45),
	PHONE_NUMBER VARCHAR(45),
	EMAIL VARCHAR(45) NOT NULL,
	USERNAME VARCHAR(45) NOT NULL,
	PASSWORD VARCHAR(45) NOT NULL,
	ACTIVE BOOLEAN,
    PICTURES_ID INT,
    ROLES_ID INT,
    AGENCIES_ID INT,
    POSITIONS_ID INT,
    LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
	PRIMARY KEY (ID),
    CONSTRAINT FK_USERS__PICTURES FOREIGN KEY(PICTURES_ID)
    REFERENCES PICTURES(ID),
    CONSTRAINT FK_USERS__ROLES FOREIGN KEY(ROLES_ID)
    REFERENCES ROLES(ID),
    CONSTRAINT  FK_USERS__AGENCIES FOREIGN KEY(AGENCIES_ID)
    REFERENCES AGENCIES(ID),
    CONSTRAINT FK_USERS__DEPARTMENTS FOREIGN KEY(POSITIONS_ID)
    REFERENCES POSITIONS(ID)
);

CREATE TABLE CANDIDATES
(
	ID INT,
	PERIOD_ID INT,
	PROPOSED_BY_USER_ID INT,
	SELECTED_USER_ID INT,
	DATE DATE,
	ACTIVE BOOLEAN,
	LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
    PRIMARY KEY(ID),
    CONSTRAINT FK_CANDIDATES_PROPOSED_BY__USERS FOREIGN KEY(PROPOSED_BY_USER_ID)
    REFERENCES USERS(ID),
    CONSTRAINT FK_CANDIDATES_SELECTED_BY__USERS FOREIGN KEY(SELECTED_USER_ID)
    REFERENCES USERS(ID),
    CONSTRAINT FK_CANDIDATES__PERIODS FOREIGN KEY (PERIOD_ID)
    REFERENCES PERIODS(ID)
);

CREATE TABLE VOTES
(
	ID INT,
	USERS_ID INT,
	CANDIDATES_ID INT,
	ACTIVE BOOLEAN,
	LAST_MODIFIED_AT DATE,
    LAST_MODIFIED_BY VARCHAR(45),
    PRIMARY KEY(ID),
    CONSTRAINT UX_USERS_CANDIDATES UNIQUE (USERS_ID,CANDIDATES_ID),
    CONSTRAINT FK_VOTES__USERS FOREIGN KEY(USERS_ID)
    REFERENCES USERS(ID),
    CONSTRAINT FK_VOTES__CANDIDATES FOREIGN KEY(CANDIDATES_ID)
    REFERENCES CANDIDATES(ID)
    
);